/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pt.lab1;

/**
 * Some javadoc
 */
public class App {
    final static int MATRIX_HEIGHT = 3;
    final static int MATRIX_WIDTH = 3;

    private static void displayMatrix(int[][] matrix) {
        for (int j = 0; j < MATRIX_HEIGHT; j++) {
            for (int g = 0; g < MATRIX_WIDTH; g++) {
                System.out.print(matrix[j][g] + " ");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        System.out.println("\nExercise 2");

        byte v_byte = 120;
        short v_short = 129;
        char v_char = 'a'; // a didn't have apostrophe
        int v_int = 65999;
        long v_long = 429496296; // 4294967296 is out of bound
        float v_float = 0.33333334f; // 0.33333334 didn't have f at the end
        double v_double = 0.33333333333;
        boolean v_boolean = true; // v_double is duplicated

        System.out.println("v_byte: " + v_byte);
        System.out.println("v_short: " + v_short);
        System.out.println("v_char: " + v_char);
        System.out.println("v_int: " + v_int);
        System.out.println("v_long: " + v_long);
        System.out.println("v_float: " + v_float);
        System.out.println("v_double: " + v_double);
        System.out.println("v_boolean: " + v_boolean);

        System.out.println("\nExercise 3");

        for (char symbol = 'a'; symbol <= 'z'; symbol++) {
            System.out.print(symbol + " ");
        }

        System.out.println(); // formatting output

        long begin = new java.util.Date().getTime();
        long i = 0;
        for (i = 1; i < 10_000_000; i++) {
        }
        long end = new java.util.Date().getTime();

        System.out.println(end - begin); // on change of `i` type amount of time increases

        System.out.println("\nExercise 5-1");
        int[] mas = { 12, 43, 12, -65, 778, 123, 32, 76 };

        int max = mas[0];

        for (int value : mas) {
            if (value > max) {
                max = value;
            }
        }

        System.out.println("Maximum value in array: " + max);

        System.out.println("\nExercise 5-2");

        int[][] matrix = new int[MATRIX_HEIGHT][MATRIX_WIDTH];

        for (int j = 0; j < MATRIX_HEIGHT; j++) {
            for (int g = 0; g < MATRIX_WIDTH; g++) {
                matrix[j][g] = (int) Math.round(Math.random() * 10);
            }
        }

        System.out.println("Initial Matrix");
        displayMatrix(matrix);

        int[][] transposedMatrix = new int[MATRIX_HEIGHT][MATRIX_WIDTH];

        for (int j = 0; j < MATRIX_HEIGHT; j++) {
            for (int g = 0; g < MATRIX_WIDTH; g++) {
                transposedMatrix[g][j] = matrix[j][g];
            }
        }

        System.out.println("Transposed Matrix");
        displayMatrix(transposedMatrix);
    }
}
